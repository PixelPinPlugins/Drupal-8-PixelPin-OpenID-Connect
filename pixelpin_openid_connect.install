<?php

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Entity\EntityTypeInterface;

/**
 * @file
 * Install, update and uninstall functions for the OpenID Connect module.
 */

/**
 * Implements hook_schema().
 */
function pixelpin_openid_connect_schema() {
  $schema['pixelpin_openid_connect_authmap'] = array(
    'description' => 'Stores OpenID Connect authentication mapping.',
    'fields' => array(
      'aid' => array(
        'description' => 'Primary Key: Unique authmap ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "User's {users}.uid.",
      ),
      'client_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The client name.',
      ),
      'sub' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Unique subject identifier.',
      ),
    ),
    'primary key' => array('aid'),
    'indexes' => array(
      'uid' => array('uid'),
      'identifier' => array('client_name', 'sub'),
    ),
    'foreign keys' => array(
      'user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  return $schema;
}

function users_field_data_schema() {
  $schema['users_field_data'] = array(
    'description' => 'Stores OpenID Connect User Data.',
    'fields' => array(
      'family_name' => array(  
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
        'not null' => TRUE,
        'description' => 'First Name.',
      ),
      'given_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
        'not null' => TRUE,
        'description' => 'Given Name.',
      ),
      'nickname' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Nickname.',
      ),
      'gender' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Gender.',
      ),
      'birthdate' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Birthdate.',
      ),
      'phone_number' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Phone Number.',
      ),
      'street_address' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Street Address.',
      ),
      'town_city' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Town City.',
      ),
      'region' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Region.',
      ),
      'postal_code' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Postal Code.',
      ),
      'country' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Country.',
      ),
    ),
    'primary key' => array('aid'),
    'indexes' => array(
      'uid' => array('uid'),
      'identifier' => array('client_name', 'sub'),
    ),
    'foreign keys' => array(
      'user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  return $schema;
}



/**
 * Converts client settings to the new format.
 */
function pixelpin_openid_connect_update_7100() {
  foreach (pixelpin_openid_connect_get_plugins(TRUE) as $client) {
    $client_id = variable_get('pixelpin_openid_connect_client_' . $client['name'] . '_client_id', '');
    $client_secret = variable_get('pixelpin_openid_connect_client_' . $client['name'] . '_client_secret', '');

    $new_configuration = array(
      'client_id' => $client_id,
      'client_secret' => $client_secret,
    );
    variable_set('pixelpin_openid_connect_client_' . $client['name'], $new_configuration);
  }
}
